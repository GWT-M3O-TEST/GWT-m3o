name: M3O Client Generation Scheduler.
on:
  push:
    paths:
      - 'cmd/api-publisher/**'
      - 'cmd/m3o-client-gen/**'
      - 'cmd/protoc-gen-openapi/**'
      - 'cmd/release-note/**'
  repository_dispatch:
    types: [build_m3o_client,build_dart,build_go,build_ts,build_shell,build_cli,build_kotlin]

env:
  GH_PAT: ${{ secrets.API_TOKEN_GITHUB }}

jobs:
  # generate_basic: generates the basic clients Go and Ts, it is triggered on push or repository_dispatch == build_m3o_client
  generate-basic-clients:
    name: Generate Basic Clients
    if: ${{ github.event_name == 'push' || github.event.action == 'build_m3o_client' }}
    runs-on: ubuntu-latest
    steps:

      - name: Check m3o-go repo
        uses: actions/checkout@v3
        with:
          repository: m3o/m3o-go
          path: m3o-go
      
      - name: Check m3o-js repo
        uses: actions/checkout@v3
        with:
          repository: m3o/m3o-js
          path: m3o-js

      - name: Check micro/services repo
        uses: actions/checkout@v3
        with:
          repository: 'micro/services'
          path: services

      - name: Generate m3o-go clients
        uses: m3o/m3o-generator-action@main
        with:
          target: 'go'
          services_path: services
      
      - name: Generate m3o-js clients
        uses: m3o/m3o-generator-action@main
        with:
          target: 'ts'
          services_path: services

      - name: Adjust generated m3o-go before pushing
        working-directory: services
        
        run: |
          # sync the clients to m3o-go/
          rsync -avz clients/go/ ../m3o-go/
          # sync the examples to m3o-go/examples
          rsync -avz examples/go/ ../m3o-go/examples/
      
      - name: Adjust generated m3o-js before pushing
        working-directory: services
        
        run: |
          # sync the clients to m3o-js/
          rsync -avz clients/ts/ ../m3o-js/
          # sync the examples to m3o-js/examples
          rsync -avz examples/js/ ../m3o-js/examples/

      - name: update version number
        working-directory: m3o-js
        run: |
          oldver=$(cat package.json | grep version | head -1) 
          patch=$(echo $oldver | awk -F. '{ print $3}' | sed 's/"//g')
          newpatch=$(($patch+1))\" 
          seg1=$(echo $oldver | awk -F. '{ print $1}') 
          seg2=$(echo $oldver | awk -F. '{ print $2}') 
          newver="$seg1.$seg2.$newpatch" 
          sed -i "s/$oldver/$newver/" package.json
          echo "old $oldver"
          echo "new $newver"
          cat package.json

      - name: Push Go files
        run: |
          echo 'Testing Push Go files...'
        # uses: m3o/commit-action@main
        # env:
        #   API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        # with:
        #   source_file: 'm3o-go/'
        #   destination_repo: 'GWT-M3O-TEST/m3o-go'
        #   destination_branch: 'main'
        #   git_server: 'github.com'
        #   user_email: 'danieljoudat@email.com'
        #   user_name: 'lambdaR'
        #   use_rsync: true
        #   commit_message: 'Commit from generate-go'
      
      - name: Push JS files
        run: |
          echo 'Testing Push JS files...'
        # uses: m3o/commit-action@main
        # env:
        #   API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        # with:
        #   source_file: 'm3o-js/'
        #   destination_repo: 'GWT-M3O-TEST/m3o-js'
        #   destination_branch: 'main'
        #   git_server: 'github.com'
        #   user_email: 'danieljoudat@email.com'
        #   user_name: 'lambdaR'
        #   use_rsync: true
        #   commit_message: 'Commit from generate-ts'

      - name: Publish m3o-js clients
        run: |
          echo 'Testing Publish m3o-js clients...'
        # uses: m3o/m3o-publish-ts-action@main
        # env:
        #   NPM_TOKEN: 'some random token'
        
  generate-openapi:
    name: generate openapi spec and publish the api
    runs-on: ubuntu-latest
    needs: generate-basic-clients
    steps:
      - name: Check micro/services repo
        uses: actions/checkout@v2
        with:
          repository: 'micro/services'
          path: services

      - name: install postman converter
        working-directory: services
        run: |
          # sudo npm install -g openapi-to-postmanv2
          # openapi2postmanv2 -h
          echo 'install postman converter'

      - name: generate openapi spec and publish the api
        working-directory: services
        run: |
          # go run cmd/api-publisher/main.go .
          echo 'generate openapi spec and publish the api'
        env:
          MICRO_ADMIN_TOKEN: ${{ secrets.MICRO_ADMIN_TOKEN }}

  generate-rest:
    name: generate the rest of M3O clients
    runs-on: ubuntu-latest
    needs: generate-openapi
    steps:
      - name: Trigger m3o/m3o-dart
        run: |
          curl -X POST -H "Authorization: token $GH_PAT" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/GWT-M3O-TEST/m3o-dart/dispatches -d '{"event_type":"build_publish_dart"}'

      - name: Trigger m3o/m3o-sh
        run: |
          curl -X POST -H "Authorization: token $GH_PAT" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/GWT-M3O-TEST/m3o-sh/dispatches -d '{"event_type":"build_publish_shell"}'

      - name: Trigger m3o/m3o-cli
        run: |
          curl -X POST -H "Authorization: token $GH_PAT" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/GWT-M3O-TEST/m3o-cli/dispatches -d '{"event_type":"build_publish_cli"}'

      - name: Trigger m3o/m3o-kotlin
        run: |
          curl -X POST -H "Authorization: token $GH_PAT" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/GWT-M3O-TEST/m3o-kotlin/dispatches -d '{"event_type":"build_publish_kotlin"}'